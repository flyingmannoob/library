{"remainingRequest":"E:\\Study\\D1\\暑期实训\\大作业\\lib\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Study\\D1\\暑期实训\\大作业\\lib\\frontend\\src\\views\\users\\list.vue?vue&type=style&index=0&id=7a1cb35f&scoped=true&lang=css","dependencies":[{"path":"E:\\Study\\D1\\暑期实训\\大作业\\lib\\frontend\\src\\views\\users\\list.vue","mtime":1756953358721},{"path":"E:\\Study\\D1\\暑期实训\\大作业\\lib\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1756907625154},{"path":"E:\\Study\\D1\\暑期实训\\大作业\\lib\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1756907637628},{"path":"E:\\Study\\D1\\暑期实训\\大作业\\lib\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1756907632686},{"path":"E:\\Study\\D1\\暑期实训\\大作业\\lib\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1756907623548},{"path":"E:\\Study\\D1\\暑期实训\\大作业\\lib\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1756907637626}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZGlzYWJsZWQtdGV4dCB7DQogIGNvbG9yOiAjOTk5Ow0KICBmb250LXNpemU6IDEycHg7DQp9DQo="},{"version":3,"sources":["list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyZA;AACA;AACA;AACA","file":"list.vue","sourceRoot":"src/views/users","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <div class=\"filter-container\">\r\n      <el-button\r\n        class=\"filter-item\"\r\n        style=\"margin-left: 10px;\"\r\n        type=\"primary\"\r\n        icon=\"el-icon-plus\"\r\n        @click=\"handleCreate\"\r\n      >\r\n        添加用户\r\n      </el-button>\r\n    </div>\r\n\r\n    <el-table\r\n      :key=\"tableKey\"\r\n      v-loading=\"listLoading\"\r\n      :data=\"list\"\r\n      border\r\n      fit\r\n      highlight-current-row\r\n      style=\"width: 100%;\"\r\n    >\r\n      <el-table-column\r\n        label=\"ID\"\r\n        prop=\"id\"\r\n        sortable=\"custom\"\r\n        align=\"center\"\r\n        width=\"80\"\r\n      >\r\n        <template slot-scope=\"scope\">\r\n          <span>{{ scope.row.id }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column\r\n        label=\"用户名\"\r\n        min-width=\"150px\"\r\n      >\r\n        <template slot-scope=\"scope\">\r\n          <span>{{ scope.row.username }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column\r\n        label=\"邮箱\"\r\n        width=\"200px\"\r\n        align=\"center\"\r\n      >\r\n        <template slot-scope=\"scope\">\r\n          <span>{{ scope.row.email }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column\r\n        label=\"角色\"\r\n        width=\"100px\"\r\n        align=\"center\"\r\n      >\r\n        <template slot-scope=\"scope\">\r\n          <el-tag :type=\"scope.row.role === 'admin' ? 'danger' : 'primary'\">\r\n            {{ scope.row.role === 'admin' ? '管理员' : '普通用户' }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column\r\n        label=\"操作\"\r\n        align=\"center\"\r\n        width=\"280\"\r\n        class-name=\"small-padding fixed-width\"\r\n      >\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"handleEdit(scope.row)\"\r\n          >\r\n            修改密码\r\n          </el-button>\r\n          <el-button\r\n            v-if=\"scope.row.username !== 'admin'\"\r\n            size=\"mini\"\r\n            type=\"danger\"\r\n            @click=\"handleDelete(scope.row)\"\r\n          >\r\n            删除\r\n          </el-button>\r\n          <span\r\n            v-else\r\n            class=\"disabled-text\"\r\n          >系统管理员</span>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 用户创建对话框 -->\r\n    <el-dialog\r\n      title=\"添加用户\"\r\n      :visible.sync=\"dialogFormVisible\"\r\n    >\r\n      <el-form\r\n        ref=\"dataForm\"\r\n        :rules=\"rules\"\r\n        :model=\"temp\"\r\n        label-position=\"left\"\r\n        label-width=\"70px\"\r\n        style=\"width: 400px; margin-left:50px;\"\r\n      >\r\n        <el-form-item\r\n          label=\"用户名\"\r\n          prop=\"username\"\r\n        >\r\n          <el-input v-model=\"temp.username\" />\r\n        </el-form-item>\r\n        <el-form-item\r\n          label=\"密码\"\r\n          prop=\"password\"\r\n        >\r\n          <el-input\r\n            v-model=\"temp.password\"\r\n            type=\"password\"\r\n            show-password\r\n          />\r\n        </el-form-item>\r\n        <el-form-item\r\n          label=\"邮箱\"\r\n          prop=\"email\"\r\n        >\r\n          <el-input v-model=\"temp.email\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div\r\n        slot=\"footer\"\r\n        class=\"dialog-footer\"\r\n      >\r\n        <el-button @click=\"dialogFormVisible = false\">\r\n          取消\r\n        </el-button>\r\n        <el-button\r\n          type=\"primary\"\r\n          @click=\"createData()\"\r\n        >\r\n          确认\r\n        </el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 修改密码对话框 -->\r\n    <el-dialog\r\n      title=\"修改用户密码\"\r\n      :visible.sync=\"editPasswordVisible\"\r\n    >\r\n      <el-form\r\n        ref=\"editPasswordForm\"\r\n        :rules=\"editPasswordRules\"\r\n        :model=\"editPasswordData\"\r\n        label-position=\"left\"\r\n        label-width=\"80px\"\r\n        style=\"width: 400px; margin-left:50px;\"\r\n      >\r\n        <el-form-item label=\"用户名\">\r\n          <el-input\r\n            v-model=\"editPasswordData.username\"\r\n            disabled\r\n          />\r\n        </el-form-item>\r\n        <el-form-item\r\n          label=\"新密码\"\r\n          prop=\"newPassword\"\r\n        >\r\n          <el-input\r\n            v-model=\"editPasswordData.newPassword\"\r\n            type=\"password\"\r\n            show-password\r\n            placeholder=\"请输入新密码\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item\r\n          label=\"确认密码\"\r\n          prop=\"confirmPassword\"\r\n        >\r\n          <el-input\r\n            v-model=\"editPasswordData.confirmPassword\"\r\n            type=\"password\"\r\n            show-password\r\n            placeholder=\"请再次输入新密码\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div\r\n        slot=\"footer\"\r\n        class=\"dialog-footer\"\r\n      >\r\n        <el-button @click=\"editPasswordVisible = false\">\r\n          取消\r\n        </el-button>\r\n        <el-button\r\n          type=\"primary\"\r\n          @click=\"updatePassword()\"\r\n        >\r\n          确认修改\r\n        </el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getUsers, createUser, deleteUser, updateUser } from '@/api/admin'\r\nimport { parseTime } from '@/utils'\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: 'UserList',\r\n  filters: {\r\n    parseTime\r\n  },\r\n  data() {\r\n    const validatePasswordConfirm = (rule, value, callback) => {\r\n      if (value !== this.editPasswordData.newPassword) {\r\n        callback(new Error('两次输入的密码不一致'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n\r\n    return {\r\n      tableKey: 0,\r\n      list: null,\r\n      total: 0,\r\n      listLoading: true,\r\n      temp: {\r\n        username: '',\r\n        password: '',\r\n        email: ''\r\n      },\r\n      dialogFormVisible: false,\r\n      editPasswordVisible: false,\r\n      editPasswordData: {\r\n        userId: null,\r\n        username: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '用户名是必填项', trigger: 'blur' },\r\n          { min: 3, max: 20, message: '用户名长度必须在3-20位之间', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '密码是必填项', trigger: 'blur' },\r\n          { min: 6, message: '密码长度至少6位', trigger: 'blur' }\r\n        ],\r\n        email: [\r\n          { required: true, message: '邮箱是必填项', trigger: 'blur' },\r\n          { type: 'email', message: '邮箱格式不正确', trigger: 'blur' }\r\n        ]\r\n      },\r\n      editPasswordRules: {\r\n        newPassword: [\r\n          { required: true, message: '新密码是必填项', trigger: 'blur' },\r\n          { min: 6, message: '密码长度至少6位', trigger: 'blur' }\r\n        ],\r\n        confirmPassword: [\r\n          { required: true, message: '确认密码是必填项', trigger: 'blur' },\r\n          { validator: validatePasswordConfirm, trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['name']),\r\n    currentUser() {\r\n      return this.name\r\n    }\r\n  },\r\n  created() {\r\n    this.getList()\r\n  },\r\n  methods: {\r\n    getList() {\r\n      this.listLoading = true\r\n      getUsers().then(response => {\r\n        this.list = response.data.items\r\n        this.total = response.data.total\r\n        this.listLoading = false\r\n      }).catch(() => {\r\n        this.listLoading = false\r\n      })\r\n    },\r\n    resetTemp() {\r\n      this.temp = {\r\n        username: '',\r\n        password: '',\r\n        email: ''\r\n      }\r\n    },\r\n    handleCreate() {\r\n      this.resetTemp()\r\n      this.dialogFormVisible = true\r\n      this.$nextTick(() => {\r\n        this.$refs['dataForm'].clearValidate()\r\n      })\r\n    },\r\n    createData() {\r\n      this.$refs['dataForm'].validate((valid) => {\r\n        if (valid) {\r\n          createUser(this.temp).then(() => {\r\n            this.dialogFormVisible = false\r\n            this.$notify({\r\n              title: '成功',\r\n              message: '用户创建成功',\r\n              type: 'success',\r\n              duration: 2000\r\n            })\r\n            this.getList()\r\n          }).catch(error => {\r\n            this.$notify({\r\n              title: '错误',\r\n              message: error.message || '创建用户失败',\r\n              type: 'error',\r\n              duration: 2000\r\n            })\r\n          })\r\n        }\r\n      })\r\n    },\r\n    handleEdit(row) {\r\n      this.editPasswordData = {\r\n        userId: row.id,\r\n        username: row.username,\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      }\r\n      this.editPasswordVisible = true\r\n      this.$nextTick(() => {\r\n        this.$refs['editPasswordForm'].clearValidate()\r\n      })\r\n    },\r\n    updatePassword() {\r\n      this.$refs['editPasswordForm'].validate((valid) => {\r\n        if (valid) {\r\n          const updateData = {\r\n            password: this.editPasswordData.newPassword\r\n          }\r\n\r\n          updateUser(this.editPasswordData.userId, updateData).then(() => {\r\n            this.editPasswordVisible = false\r\n            this.$notify({\r\n              title: '成功',\r\n              message: '密码修改成功',\r\n              type: 'success',\r\n              duration: 2000\r\n            })\r\n            // 重置表单数据\r\n            this.editPasswordData = {\r\n              userId: null,\r\n              username: '',\r\n              newPassword: '',\r\n              confirmPassword: ''\r\n            }\r\n          }).catch(error => {\r\n            this.$notify({\r\n              title: '错误',\r\n              message: error.message || '修改密码失败',\r\n              type: 'error',\r\n              duration: 2000\r\n            })\r\n          })\r\n        }\r\n      })\r\n    },\r\n    handleDelete(row) {\r\n      if (row.username === 'admin') {\r\n        this.$notify({\r\n          title: '警告',\r\n          message: '不能删除系统管理员账户',\r\n          type: 'warning',\r\n          duration: 2000\r\n        })\r\n        return\r\n      }\r\n\r\n      this.$confirm('确认删除该用户?', '警告', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        deleteUser(row.id).then(() => {\r\n          this.$notify({\r\n            title: '成功',\r\n            message: '删除成功',\r\n            type: 'success',\r\n            duration: 2000\r\n          })\r\n          const index = this.list.indexOf(row)\r\n          this.list.splice(index, 1)\r\n        }).catch(error => {\r\n          this.$notify({\r\n            title: '错误',\r\n            message: error.message || '删除用户失败',\r\n            type: 'error',\r\n            duration: 2000\r\n          })\r\n        })\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.disabled-text {\r\n  color: #999;\r\n  font-size: 12px;\r\n}\r\n</style>\r\n"]}]}